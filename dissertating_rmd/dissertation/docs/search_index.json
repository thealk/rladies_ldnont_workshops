[
["index.html", "Dissertating with RMarkdown and Bookdown", " Dissertating with RMarkdown and Bookdown A preliminary tutorial led by Thea Knowles for the R-Ladies #LdnOnt workshop series Last updated: 2019-04-22 "],
["intro.html", "Chapter 1 Introduction 1.1 A preliminary guide 1.2 Setting up 1.3 My current process: A glimpse", " Chapter 1 Introduction 1.1 A preliminary guide This is a non-exhaustive guide to writing your dissertation using RMarkdown and Bookdown. Specifically, it will walk you through one method of organziing, writing, and rendering a dissertation with these tools, using an adapted version of the Western University thesis templates and building primarily off the techniques outlined by Lucy D‚ÄôAgostino McGowan, among others (see Section 7.1 for more resources!). Caveat: At the time of writing, I am currently in the throes of dissertating. This means that there are likely several details I haven‚Äôt quite hammered out yet, or techniques I‚Äôve missed. In the last year and a half, I‚Äôve been collecting other people‚Äôs tutorials and resources on using RMarkdown + for the purposes of using it to write a dissertation. The final product is my interpretation of these resources, adapted to my needs, and presented here as a ‚ÄúWhat-I‚Äôve-learned-so-far‚Äù-style tutorial. via GIPHY This tutorial will use a Kaggle dataset that reports nutritional information about Starbucks bevarages1. We‚Äôve seen this dataset used twice in previous R-Ladies #LdnOnt presentations, so the primary motivation behind using it here is for continuity‚Äôs sake (also, coffee is a nice thing to have during dissertation writing). This tutorial loosely builds on another tutorial I gave in 2017 about using RMarkdown to write journal articles. Presumably this could be a realistic step for many people: write an article during your PhD (using RMarkdown), and eventually incorporate it into a dissertation. While the focus of this tutorial is technically about dissertation writing, it will hopefully be a practical tool for learning more about RMarkdown and Bookdown in general from the perspective of somebody who‚Äôs learning as she goes. 1.2 Setting up In order to use this tutorial, you need the following: R RStudio Recent versions of RStudio also include Pandoc, which is required to compile documents Latex for Mac or Windows (if you want to compile to PDF). Alternatively, install TinyTex, the Latex distribution created and recommended by Yihui Xie, creator of RMarkdown and bookdown2. bookdown R package. Installing bookdown will automatically import knitr and rmarkdown pacakges as well. Install it by entering the following code into your R console: install.packages(&quot;bookdown&quot;) 1.3 My current process: A glimpse ‚úèÔ∏è As I collected data and started gearing up to write the capital D Dissertation, I started keeping my notes in a separate bookdown project. This also helped me cut my teeth on bookdown, and made my notes wayyyyy easier to sift through than previous attempts (Google Docs, actual notebooks, txt files, readmes‚Ä¶ I have found a lot of ways to flail). üóí Get some data in a .csv file üßπ Load, tidy, and explore data in a designated .R file (e.g., 1_tidy.R) üìà Carry out tats and prep data for use in text in a second designated .R file (2_models.R), sourcing the work done in 1_tidy.R. üìñ RMarkdown files Separate files for Intro, Methods, Results, Discussion, References Many of these main chapters further broken down into smaller, more modular .Rmd files The Results .Rmd files make heavy use of the work done in 3 &amp; 4. Figures coded in text. Stats reported from final models defined in 2_models.R, with help from predefined functions and code snippets. üíª Preview dissertation for myself in an .html format (compiles faster, easier to navigate, and I save it to my Chrome bookmarks for quick access) üìù Preview multiple .Rmd files in Word to send to my supervisor as a .docx draft previews/tmp_preview.Rmd uses child files to knit together a subset of my .Rmd files to send to my supervisor There is also a ‚Äúpreview‚Äù function with Bookdown you could explore using! üìö After major changes, compile the whole dissertation with what I have so far Ensures that I am able to notice and fix any compiling errors at the interim stages and makes me feel like I am making real progress I don‚Äôt know how accurate the actual nutritional information is‚Ä¶ I wouldn‚Äôt rely on this tutorial as a source for Starbucks info if I were you‚Ä¶‚Ü© TinyTex is probably the best way to go because Yihui always anticipates the problems we will run into, but I personally have not used it.‚Ü© "],
["crashcourse.html", "Chapter 2 RMarkdown crash course", " Chapter 2 RMarkdown crash course But first: A crash course in RMarkdown In Spring 2018 at R-Ladies #LdnOnt we practiced making a manuscript using RMarkdown (slides). Today we will up the ante and write a whole3 dissertation using RMarkdown! bookdown is a brilliant R package designed to incorporate multiple RMarkdown files into a single final product, a book. But bookdown is not just for books: Despite the package name containing the word ‚Äúbook‚Äù, bookdown is not only for books. The ‚Äúbook‚Äù can be anything that consists of multiple R Markdown documents meant to be read in a linear sequence, such as course handouts, study notes, a software manual, a thesis, or even a diary. From the bookdown preface Get up and running with RMarkdown and R Projects: Do exercise 1 in Section 8.1 More like a smidgin than a whole, really.‚Ü© "],
["getting-organized-directory-structure.html", "Chapter 3 Getting organized: Directory structure", " Chapter 3 Getting organized: Directory structure A suggestion based on the advice of several clever people I have copied: In this example‚Ä¶ dissertation contains your individual RMarkdown files that contain the bulk of the text of the dissertation. index.Rmd: Contains your YAML that will tell bookdown how to render your book .Rmd files that comprise the body of your book. These can be specific chapters, but can also be constructed modularly in whatever way you choose. Unless specifically told otherwise, bookdown will compile these in alphanumeric order, so they should be named in the order you want them to appear. In a nutshell, file names should be machine readable, human readable, and play well with default ordering (thank you, Jenny Bryan). The names of the files themselves don‚Äôt appear anywhere in the final document. For that, you need to use headers within the body of the .Rmd documents references.bib is a bib file containing your references. Most popular reference management tools have the option to export your references to a .bib file. parameters contains the files necessary to tell bookdown how to render your final document. If you are compiling to a PDF, it needs 2 .tex (Latex) files: doc_preface.tex, which contains the ‚Äúfront matter‚Äù of your dissertation (acknowledgements, etc), and params.tex, which contains the Latex parameters required to compile If you are compiling to a Word document, it needs a template file. This could technically just be a blank document. The important thing is that it has been saved with the Word styles you want to employ in your final .docx output. data contains any raw data files (.csv, .xlsx, etc.). Ideally, these don‚Äôt get touched after you put them here, because any further manipulation will be done using .R scripts (which will make it easier to track your changes to the data) scripts contains any helper scripts you used along the way (e.g., for your analysis) More resources: Software Carpentry‚Äôs guide on project management in R Studio Angela Li‚Äôs thread on thesis structuring "],
["chapter-writing.html", "Chapter 4 Writing a chapter", " Chapter 4 Writing a chapter We will now create a single chapter in RMarkdown. There is a lite and a heavy duty version of this. The lite version will help us learn: the minimal components of a bookdown chapter Go to the lite version in exercise 2 in Section 8.2 The heavy-duty version will help us learn how to incorporate: data helper .R script citations figures/tables Go to the heavy-duty version in exercise 3 in Section 8.3 "],
["making-a-book.html", "Chapter 5 Making a book! 5.1 The workhorses 5.2 Ready, set, render! 5.3 Intermediary stages", " Chapter 5 Making a book! This section is heavily informed by Lucy‚Äôs beautiful blog post and accompanying toolkit. Now that we have the bare bones of a dissertation, we can compile it for the first time. Go to exercise 4 in Section 8.4 Recall that, for this method, the essential ingredients are: your .Rmd files (chapters) index.Rmd Optional ingredients: references.bib templates 5.1 The workhorses The files that will do the heavy lifting in order for your dissertation to compile as a PDF are: index.Rmd contains the YAML4 params.tex preamble.tex index.Rmd This contains a lot of info. You can specify different options for each output type you plan to compile. Since we‚Äôll be compiling to PDF (pdf_book), let‚Äôs take a closer look at that section: output: bookdown::pdf_book: toc: no template: null latex_engine: xelatex keep_tex: yes includes: in_header: templates/preamble.tex before_body: templates/doc_preface.tex Importantly, we are pointing to the two other workhorses necessary for the PDF output: the .tex files. Note that these are adapted from people who know a lot more about LaTeX than I do; I changed very little, and mostly just moved stuff around. In their current form, they will output a document that adheres to the current Western thesis standards5. The in_header line tells bookdown to incorporate everything in preamble.tex. If you‚Äôre familiar with LaTex, this is everything that comes before \\begin{document}. This also contains important info like your name, department, thesis title, etc‚Ä¶ preamble.tex The before_body line points to doc_preface.tex which contains all the pre-body text including the abstract, acknowledgements, table of contents, etc doc_preface.tex 5.2 Ready, set, render! To compile your dissertation for the first time, enter the following code in the console: bookdown::render_book(&quot;index.Rmd&quot;, &quot;bookdown::pdf_book&quot;) Note that here we are specifying the pdf_book output format, but we don‚Äôt actually have to since it happens to be the first, and therefore default, output format specified in our YAML. We could just as successfully run bookdown::render_book(\"index.Rmd\"). If all goes according to plan, you will see a smattering of new folders and files. Your shiny new book can be found in _book/_main.pdf If things did not go according to plan, you will get an error and a request that you delete _main.Rmd before recompiling. _main.Rmd is a document that‚Äôs created in the process, but gets deleted when the final output has successfully compiled. It can often give you hints as to what went wrong (the lines where it got tripped up will be echoed in the error message). As instructed, you must delete it before you try to render again. Other things to know This is the ‚ÄúMerge-and-Knit‚Äù approach. See Yihui‚Äôs explanation of other rendering approaches here. Yihui also recommends not rendering the full PDF that often, as it can be very time consuming when the output is large, and you run the risk of getting caught up with typesetting queries that are best left to the end. There is a way to preview individual chapters that Yihui has included in bookdown, but I will also discuss my own preview methods later on. If you choose to use the LaTeX nomenclature package to handle abbreviations, you need to do some additional work to get the abbreviations to show up the first time. I recommend scrolling to this section in Lucy‚Äôs blog post Chapter headers (Chapter 1, Chapter 2, etc) are inserted when you use a first level header, e.g. # Header 1. Subsections within a chapter are assigned based on the subheaders you use (e.g., ## Header 2, ### Header 3‚Ä¶) 5.3 Intermediary stages I like to do a full rendering of my PDF anytime I make major changes, just to make sure everything still works so as to avoid major errors along the way. In the interim, I have a couple of different methods for viewing my work. These are some suggestions: Bookmark an .html version of your most recent version for quick and easy viewing: Every day, I compile a gitbook version of my dissertation. This outputs an HTML file that can be viewed in a web browser. I‚Äôve saved this page to my Chrome bookmarks so I can easily glance at the most recent version whenever I want. Keep a bookdown project of notes that can also be bookmarked and easily viewed: I also have another bookdown project that I update regularly called my dissertation ‚Äúroadmap‚Äù, and which is also bookmarked for easy access. I use this ‚Äúbook‚Äù as a collection of notes to myself (mainly changes to my methodology, issues I‚Äôve run into with compiling, etc‚Ä¶). I also used it to cut my teeth on while getting used to bookdown, before actually compiling the bones of my dissertation for the first time. Knit individual chapters in isolation: You can knit individual .Rmd files to see how images show up, how the text looks, etc. I like to knit to HTML on a very regular basis because it‚Äôs a) fast and b) shows up immediately in my Viewer pane in RStudio. I also will occasionally knit individual chapters as Word documents to see how they will show up when I send them to my supervisor for edits (see below), and to keep track of things that aren‚Äôt playing nice with Word. Use child documents to knit partial previews of the dissertation to send to your supervisor/committee: My supervisor does not need to see my entire dissertation document every time I add a section. It is much kinder and realistic to send individual chapters or sections to him. Furthermore, he likes to receive things in .docx format so he can used tracked changes to add suggestions. After much hemming and hawing, I have settled on a workflow for this that I am happy with, though it is by no means the best option for everyone. See the next Section 6. YAML (rhymes with camel): The frontmatter/metadata that tells R Markdown how to generate your document. Indentation and spacing are very important. Stands for ‚ÄúYAML Ain‚Äôt Markup Language‚Äù or, less meta, ‚ÄúYet Another Multicolumn Layout.‚Äù‚Ü© The thesisdown package readme has a nice list of other templates that people have adapted for their universities if you‚Äôd like to compare other .tex input files.‚Ü© "],
["previews.html", "Chapter 6 Previews and collaborations", " Chapter 6 Previews and collaborations One of the reasons I have fallen so completely in love with RMarkdown is it lets me putter away in my ideal workflow (do stuff in R, integrate directly in document, have full control over style parameters), AND honour my supervisor‚Äôs desire to receive .docx documents. While my final output will be rendered as a PDF, and my interim document will be rendered as HTML, the drafts that get sent to my supervisor must be in Word. As previously mentioned, bookdown specifically has a function to render previews. You can read more about that here. I strayed away from this option because sometimes I found myself wanting to send my supervisor multiple parts of my dissertation at once (e.g., part of the methods, part of the results). To do this, I have the following protocol in place: Subdirectory called previews that contains one file: render_preview.Rmd render_preview contains: minimal YAML required to output a legible .docx file minimal setup chunk identical to what I have in index.Rmd chunks that call child documents; a way to input specific .Rmd files as-is into a main .Rmd ‚Äúparent‚Äù document (in this case, render_previews.Rmd is the parent) render_preview.Rmd Sending a draft preview When I‚Äôm ready to send a partial draft to my supervisor, I input the relevant child documents and knit render_previews.Rmd. I then name it something useful and send it to him. He may mark it up and send it back to me with tracked changes I then incorporate these tracked changes by hand into my RMarkdown files. Note: this is a highly controversial topic! We have currently hit a happy medium where I am okay doing this (it gives me the opportunity to more carefully review the changes I think), and he has allowed me to send drafts without tracked changes back. NOT ALL COLLABORATORS WILL BE THIS FLEXIBLE. Some want to see the tracked changes sent back to them too. This gets tricky with RMarkdown, and has been the centre of several debates. Some semi-solutions you may wish to explore that I have retweeted exactly for this purpose: Well this is potentially extremely exciting. Two way word &lt;-&gt; rmd street, including tracked changes integration. Will be watching this one üëÄ https://t.co/7hcqolbBFQ ‚Äî Thea Knowles ((???)) December 2, 2018 TIL There is a way to compare diffs between 2 .docx filesImplications for Rmd workflows with collaborators/supervisors using Word: Use the revised .docx version to guide changes in your .Rmd, then compare new output with the original to dbl checküëç https://t.co/A2EtEpFxbm pic.twitter.com/dnWDjCXLxn ‚Äî Thea Knowles ((???)) February 15, 2019 "],
["nitty-gritty-stuff.html", "Chapter 7 Nitty gritty stuff 7.1 Other resources 7.2 Dissertating in Bookdown", " Chapter 7 Nitty gritty stuff In descending order of messiness (i.e., how confused I get)6 Reference management + citations Notes to self within text Snippets! üíï Predefined functions Footnotes Cross-referencing sections/figs/tables Figure/table autonumbering Tables in RMarkdown Specifically when working with both .docx and .pdf Appendices 7.1 Other resources Other Rmd + bookdown resources 7.2 Dissertating in Bookdown 7.2.1 Essential ingredients index.Rmd: Contains your YAML that will tell bookdown how to render your book .Rmd files that comprise the body of your book. These can be specific chapters, but can also be constructed modularly in whatever way you choose. Unless specifically told otherwise, bookdown will compile these in alphanumeric order, so they should be named in the order you want them to appear. In a nutshell, file names should be machine readable, human readable, and play well with default ordering (thank you, Jenny Bryan). 7.2.2 Non-essential but very helpful ingredients A .bib file contianing your references Separate directories containing your: data (raw .csv files, etc) scripts (helper .R scripts that contain the bulk work of your analyses) images that are not created in R Template documents that will provide bookdown with the information it needs to style your document Word: uwo_thesis_template.docx is a Word document containing the style settings required to output a Western-approved thesis. This template also contains text, but really all you need is a Word document with the style elements set that you wish to use PDF: The tex folder contains two .tex files that use Latex to create a final PDF: params.tex contains the Latex parameters required to compile the document doc_preface.tex contains the front matter: everything that will appear before the beginning of the thesis A note on the .tex documents: The documents provided here are comprised of a mash-up of two extremely useful resources: Lucy D‚ÄôAgostino McGowan‚Äôs blogpost and dissertation toolkit provided the original versions of these documents and a super handy walkthrough on how to use them. Jon Clau‚Äôs updated Western .tex templates contain the information necessary to produce a Western U thesis (the files hosted on Western‚Äôs site are older versions) 7.2.3 Rendering the book Once you have more than one .Rmd file, you are ready to render/compile them into a fully combined document. The rendered version will appear in _book/ To render the book as whatever is listed as the default in index.Rmd, do: bookdown::render_book(&quot;index.Rmd&quot;) To render as a pdf or word document, do: bookdown::render_book(&quot;index.Rmd&quot;, output_format = &quot;pdf_book&quot;) bookdown::render_book(&quot;index.Rmd&quot;, output_format = &quot;word_document2&quot;) A nice way to preview it is to render it as a gitbook: bookdown::render_book(&quot;index.Rmd&quot;, &quot;bookdown::gitbook&quot;) Then open index.html in your browser, and run bookdown::serve_site() to update it whenever you save changes. This is much neater/navigable. Beware of features that will only show up in pdf rendering (like certain features of kable, kableExtra), or that won‚Äôt compile for pdfs (like the emo package) Some of my confusion may be because I haven‚Äôt had to try hard to figure it out yet, and not necessarily related to the actual detail itself‚Ü© "],
["exercises.html", "Chapter 8 Exercises 8.1 Exercise 1. Getting started with RMarkdown 8.2 Exercise 2. What‚Äôs in a chapter? Lite version 8.3 Exercise 3. What‚Äôs in a chapter? Heavy-duty version 8.4 Exercise 4. Render the book! 8.5 4. Explore .tex files 8.6 5. Bookdown to .pdf 8.7 7. Add figure 8.8 9. Add table 8.9 10. Edit refs 8.10 11. Report stats 8.11 12. Customize snippets", " Chapter 8 Exercises 8.1 Exercise 1. Getting started with RMarkdown Make an R Project R Projects make project management really simple. For every new project you embark on, creating a new .RProj file. Open that .RProj file whenver you‚Äôre ready to work on that project, and it will: Give you easy access to the directory structure (no need to define a working directory) Restore your last RStudio session from that project (no need to reopen files) Give you access to your R history from your last session NB: these preferences can all be tweaked Follow the prompts to create a project in a new directory for this workshop Make a new .Rmd file These are the components of your RMarkdown file: We won‚Äôt go into this in too much detail Knit your document Try it as a‚Ä¶ Word document Html document PDF document More resources RStudio intro to RMarkdown R-Ladies #LdnOnt presentations Intro to RMarkdown RMarkdown for summary reports and journal articles (also see more specific resources on the last slide) Back to Section 2 8.2 Exercise 2. What‚Äôs in a chapter? Lite version Open 01_Intro.Rmd and do the following: Write some text Insert an R chunk that contains some simple R code Knit to HTML E.g., x = 3 x^2 ## [1] 9 Back to Section 4 8.3 Exercise 3. What‚Äôs in a chapter? Heavy-duty version Open 03a_Results.Rmd and find examples of: sourcing a helper file (helper.R) citing references generating images and tables from the imported data cross-referencing those figures and tables using inline R code to refer to values from the data (like p-values, etc) so there‚Äôs never a need to copy/paste Open ../scripts/helper.R to see what it contains. Open 03b_Results.Rmd and do any of the following: source helper.R write some text cite another source make a figure or a table Knit the document as an HTML file Back to Section 4 8.4 Exercise 4. Render the book! Render your book by running bookdown::render_book(&quot;index.Rmd&quot;, &quot;bookdown::pdf_book&quot;) At this point you can also see what the other formats look like: bookdown::render_book(&quot;index.Rmd&quot;, &quot;bookdown::word_document2&quot;) bookdown::render_book(&quot;index.Rmd&quot;, &quot;bookdown::gitbook&quot;) How are the different outputs called? How do they differ? Where do they live? Errors If you were able to compile without difficulties, try to create an error to see what it will look like when you try to compile. Some examples of errors I have easily and repeatedly encountered throughout this process are: having two R chunks with the same name (e.g., I often have a chunk named setup at the beginnings of some of my .Rmd documents. I have taken to calling these setup-intro, setup-method etc. when I need to have them but don‚Äôt want them to cause errors.) running into an error somewhere in the R script (did I try to call a variable that didn‚Äôt exist? Forget to load a package? How many ways are there to err in R, oh let me count the ways‚Ä¶) Solving errors is really a case-by-case quest. I try to first see what hints are in the error message (is it an .Rmd issue? A Latex issue? An R issue?) and usually resort to googling the error7. More resources: - Getting started with bookdown 8.5 4. Explore .tex files 8.6 5. Bookdown to .pdf 8.7 7. Add figure 8.8 9. Add table 8.9 10. Edit refs 8.10 11. Report stats 8.11 12. Customize snippets Joy be it that ‚ÄúGoogling the error message‚Äù is now an R package.‚Ü© "],
["limitations.html", "Chapter 9 Limitations 9.1 Other methods 9.2 Woe is Word‚Ä¶", " Chapter 9 Limitations I.e., the things I know that I do not yet know 9.1 Other methods As mentioned, this is one particular way of doing things. You may also wish to check out R packages people have created for their theses thesisdown: Thesis template designed for Reed College. Gitbook output PDF output Many others have developed customized versions of this for their universities. See the thesisdown site for a list of other available templates. Perhaps the Western templates could eventually be incorporated in this 9.2 Woe is Word‚Ä¶ Many of the issues I run into have to do with strange behaviour in Microsoft Word. For example: 9.2.1 Table formatting Table formatting is ugly with kable(). There are alternatives to kable that are specifically designed for .docx output. These are lovely alternatives to use if you are only outputting to Word (or HTML), but I have repeatedly run into problems with these other options playing nice when alternating between .pdf and .docx outputs. Table formatting packages for .docx outputs: flextable captioner kableExtra::as_image() 9.2.2 Parameter files: A neater, nicer way? In its current format, all your writing is in RMarkdown except when it comes to your pre-body text, which have to be done in the doc_preface.tex. This is not a huge concern, though eventually down the line it would be nice to somehow incorporate this text into RMarkdown documents as well for total continuity. Alas, today is not that day. Additionally, providing more than style specifications to Word documents is a tricky business, and one I do not have a firm grasp on. At the moment, the .docx template provided tells RMarkdown/bookdown how to style the document, but does not include the abstract. My rationalization for not worrying about this is that the .docx versions, for me, are intermediary; they are not the final product, and so fussing about the fine grained details is not a good use of time. However, it may be the case that someone down the line would prefer to use a .docx output every step of the way, right up until the final submission. In this case, more tweaking would need to be done. I have many more complaints about outputting to word (see Table gripes up above), but I think these limitations are not related to the fact that solutions don‚Äôt exist, but that I haven‚Äôt figured them out yet and have decided to stop worrying. "],
["other-great-resources.html", "Chapter 10 Other great resources", " Chapter 10 Other great resources Lucy‚Äôs blog post Angela Li‚Äôs thread Rosanna van Hespen‚Äôs blog series Chester Ismay‚Äôs thesisdown package and examples (see other people‚Äôs adaptations within, as well!) "],
["references.html", "Chapter 11 References", " Chapter 11 References "]
]
