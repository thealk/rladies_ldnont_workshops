[
["index.html", "Dissertating with RMarkdown and Bookdown", " Dissertating with RMarkdown and Bookdown A preliminary tutorial led by Thea Knowles for the R-Ladies #LdnOnt workshop series Last updated: 2019-04-26 "],
["intro.html", "Chapter 1 Introduction 1.1 A preliminary guide 1.2 Setting up 1.3 My current process: A glimpse", " Chapter 1 Introduction 1.1 A preliminary guide This is a non-exhaustive, non-expert guide to writing your dissertation using rmarkdown and bookdown. The materials for this tutorial can be found on Google Drive or GitHub Specifically, it will walk you through one person‚Äôs method of organizing, writing, and rendering a dissertation with these tools, using an adapted version of the Western University thesis templates, building off the techniques outlined by Lucy D‚ÄôAgostino McGowan, and following Yihui Xie‚Äôs incredibly helpful bookdown and rmarkdown guides. See Section 11 for even more resources! The essence of bookdown is to provide a means of combining multiple chapters, each written as separate R Markdown files. This makes it an excellent tool for dissertation writing, as it allows you to seamlessly knit R code and narrative text in a modular, manageable structure. It‚Äôs also not just for books! Despite the package name containing the word ‚Äúbook‚Äù, bookdown is not only for books. The ‚Äúbook‚Äù can be anything that consists of multiple R Markdown documents meant to be read in a linear sequence, such as course handouts, study notes, a software manual, a thesis, or even a diary. Yihui Xie Caveat: At the time of writing, I am currently in the throes of dissertating. This means that there are likely several details I haven‚Äôt quite hammered out yet, or techniques I‚Äôve missed. In the last year and a half, I‚Äôve been collecting other people‚Äôs tutorials and resources on using RMarkdown + for the purposes of using it to write a dissertation. The final product is my interpretation of these resources, adapted to my needs, and presented here as a ‚ÄúWhat-I‚Äôve-learned-so-far‚Äù-style tutorial. via GIPHY This tutorial will use a Kaggle dataset that reports nutritional information about Starbucks bevarages1. We‚Äôve seen this dataset used twice in previous R-Ladies #LdnOnt presentations, so the primary motivation behind using it here is for continuity‚Äôs sake (also, coffee is a nice thing to have during dissertation writing). This tutorial loosely builds on another tutorial I gave in 2017 about using RMarkdown to write journal articles. Presumably this could be a realistic step for many people: write an article during your PhD (using RMarkdown), and eventually incorporate it into a dissertation. While the focus of this tutorial is technically about dissertation writing, it will hopefully be a practical tool for learning more about R Markdown and Bookdown in general from the perspective of somebody who‚Äôs learning as she goes. 1.2 Setting up In order to use this tutorial, you need the following: R RStudio Recent versions of RStudio also include Pandoc, which is required to compile documents Latex for Mac or Windows (if you want to compile to PDF). Alternatively, install TinyTex, the Latex distribution created and recommended by Yihui Xie, creator of RMarkdown and bookdown23. bookdown R package. Installing bookdown will automatically import knitr and rmarkdown pacakges as well. Install it by entering the following code into your R console: install.packages(&quot;bookdown&quot;) Yihui also has a super bookdown tutorial to follow. The bookdown manual is incredibly comprehensive and easy to follow, and will cover way more than what we‚Äôll go in to here. 1.3 My current process: A glimpse ‚úèÔ∏è As I collected data and started gearing up to write the capital D Dissertation, I started keeping my notes in a separate bookdown project. This also helped me cut my teeth on bookdown, and made my notes wayyyyy easier to sift through than previous attempts (Google Docs, actual notebooks, txt files, readmes‚Ä¶ I have found a lot of ways to flail). üóí Get some data in a .csv file üßπ Load, tidy, and explore data in a designated .R file (e.g., 1_tidy.R) üìà Carry out tats and prep data for use in text in a second designated .R file (2_models.R), sourcing the work done in 1_tidy.R. üìñ R Markdown files Separate files for Intro, Methods, Results, Discussion, References Many of these main chapters further broken down into smaller, more modular .Rmd files The Results .Rmd files make heavy use of the work done in 3 &amp; 4. Figures coded in text. Stats reported from final models defined in 2_models.R, with help from predefined functions and code snippets. üíª Preview dissertation for myself in an .html format (compiles faster, easier to navigate, and I save it to my Chrome bookmarks for quick access) üìù Preview multiple .Rmd files in Word to send to my supervisor as a .docx draft previews/tmp_preview.Rmd uses child files to knit together a subset of my .Rmd files to send to my supervisor There is also a ‚Äúpreview‚Äù function with Bookdown you could explore using! üìö After major changes, compile the whole dissertation with what I have so far Ensures that I am able to notice and fix any compiling errors at the interim stages and makes me feel like I am making real progress I don‚Äôt know how accurate the actual nutritional information is‚Ä¶ I wouldn‚Äôt rely on this tutorial as a source for Starbucks info if I were you‚Ä¶‚Ü© TinyTex is probably the best way to go because Yihui always anticipates the problems we will run into, but I personally have not used it.‚Ü© Errors installing TinyTex? See if this advice helps.‚Ü© "],
["crashcourse.html", "Chapter 2 R Markdown crash course 2.1 Markdown syntax basics 2.2 More resources", " Chapter 2 R Markdown crash course But first: A crash course in R Markdown In Spring 2018 at R-Ladies #LdnOnt we practiced making a manuscript using RMarkdown (slides). Today we will up the ante and write a whole4 dissertation using R Markdown! 2.1 Markdown syntax basics You can write plain old text like this, or you can make italic text by encasing it in single underscores or asterisks (*like this!*), bold text by surrounding it with two (**like this!!**) or bold and italic by surrounding it with three (***like this!!!***). Paragraph breaks are indicated by a double line break. Single line breaks don‚Äôt create new paragraphs, and this can be useful to make your writing easier to read. Links are written by including the text in square brackets followed by the URL in parenthesis: [text](path/to/url/). Headers are easy! They are denoted with hash marks: # First level header ## Second level header ### Third level header Lists Lists can be unordered by using hyphens or asterisks - Item 1 - Item 2 - Item 2b Item 1 Item 2 Item 2b Lists can be ordered by using numbers, but it doesn‚Äôt matter what numbers you use, only what number you start with! 1. Item 1 5. Item 2 Item 1 Item 2 Watch out for white space! A line break is needed for the list to start. R code R code can be included in chunks. A chunk can be inserted via the Source pane or by typing Cmd Option k. They look like this: ` ``{r chunk-label, eval=TRUE} # Comments in R need a hash mark in front of them x &lt;- 2 ``` Exercise 1 Get up and running with R Markdown and R Projects: Do exercise 1 in Section 9.1 2.2 More resources R Markdown: The Definitive Guide bookdown‚Äôs Markdown syntax chapter R Studio R Markdown cheatsheet R Studio intro to R Markdown R-Ladies #LdnOnt R Markdown presentation More like a smidgen than a whole, really.‚Ü© "],
["getting-organized.html", "Chapter 3 Getting organized 3.1 Directory structure 3.2 More resources", " Chapter 3 Getting organized 3.1 Directory structure A suggestion based on the advice of several clever people I have copied5: In this example (following Lucy‚Äôs file structure‚Ä¶ dissertation Contains your individual R Markdown files that contain the bulk of the text of the dissertation. index.Rmd: Contains your YAML (metadata) that will tell bookdown how to render your book .Rmd files that comprise the body of your book. These can be specific chapters, but can also be constructed modularly in whatever way you choose. Unless specifically told otherwise, bookdown will compile these in alphanumeric order, so they should be named in the order you want them to appear. In a nutshell, file names should be machine readable human readable play well with default ordering (merci, Jenny Bryan). The names of the files themselves don‚Äôt appear anywhere in the final document. For that, you need to use headers within the body of the .Rmd documents references.bib is a bib file containing your references. Most popular reference management tools have the option to export your references to a .bib file. parameters Contains the files necessary to tell bookdown how to render your final document. These are the workhorses of your dissertation style, and need to be edited according to your university guidelines. If you are compiling to a PDF, it needs 2 .tex (LaTeX) files: doc_preface.tex, which contains the ‚Äúfront matter‚Äù of your dissertation (acknowledgements, etc), and params.tex, which contains the Latex parameters required to compile If you are compiling to a Word document, it needs a template file. This could technically just be a blank document. The important thing is that it has been saved with the Word styles you want to employ in your final .docx output. data Contains any raw data files (.csv, .xlsx, etc.). Ideally, these don‚Äôt get touched after you put them here, because any further manipulation will be done using .R scripts (which will make it easier to track your changes to the data) scripts Contains any helper scripts you used along the way (e.g., for your analysis) 3.2 More resources Software Carpentry‚Äôs guide on project management in R Studio Angela Li‚Äôs thread on thesis structuring Jenny Bryan‚Äôs ‚ÄúWhat they forgot to tell you about R‚Äù Specifically, thank you Yihui Xie for the bookdown demo, Jenny Bryan for the project-oriented workflow wisdom, Lucy D‚ÄôAgostino McGowan for the ‚ÄúOne Year to Dissertate‚Äù post, and Angela Li for the thread and screenshots of your process!‚Ü© "],
["chapter-writing.html", "Chapter 4 Writing a chapter 4.1 Lite version 4.2 Heavy-duty version", " Chapter 4 Writing a chapter We will now create a single chapter in R Markdown. 4.1 Lite version All you really need is a header and some text! The lite version exercise will help us learn: the minimal components of a bookdown chapter Go to the lite version in exercise 2 in Section 9.2 4.2 Heavy-duty version The heavy-duty version will help us learn how to incorporate: data helper .R script citations figures/tables Go to the heavy-duty version in exercise 3 in Section 9.3 "],
["compiling-the-dissertation.html", "Chapter 5 Compiling the dissertation! 5.1 The workhorses 5.2 Ready, set, render!", " Chapter 5 Compiling the dissertation! This section is heavily informed by Lucy‚Äôs beautiful blog post and accompanying toolkit. Now that we have the bare bones of a dissertation, we can compile it for the first time. Go to exercise 4 in Section 9.4 Recall that, for this method, the essential ingredients are: your .Rmd files (chapters) index.Rmd Optional ingredients: references.bib templates 5.1 The workhorses The files that will do the heavy lifting in order for your dissertation to compile as a PDF are: index.Rmd contains the YAML6 preamble.tex doc_preface.tex index.Rmd This contains a lot of info. You can specify different options for each output type you plan to compile. Since we‚Äôll be compiling to PDF (pdf_book), let‚Äôs take a closer look at that section: output: bookdown::pdf_book: toc: no template: null latex_engine: xelatex keep_tex: yes includes: in_header: templates/preamble.tex before_body: templates/doc_preface.tex Importantly, we are pointing to the two other workhorses necessary for the PDF output: the .tex files. Note that these are adapted from people who know a lot more about LaTeX than I do; I changed very little, and mostly just moved stuff around. In their current form, they will output a document that adheres to the current Western thesis standards7. The in_header line tells bookdown to incorporate everything in preamble.tex. If you‚Äôre familiar with LaTeX, this is everything that comes before \\begin{document}. This also contains important info like your name, department, thesis title, etc‚Ä¶ preamble.tex The before_body line points to doc_preface.tex which contains all the pre-body text including the abstract, acknowledgements, table of contents, etc doc_preface.tex 5.2 Ready, set, render! To compile your dissertation for the first time, enter the following code in the console: bookdown::render_book(&quot;index.Rmd&quot;, &quot;bookdown::pdf_book&quot;) Note that here we are specifying the pdf_book output format, but we don‚Äôt actually have to since it happens to be the first, and therefore default, output format specified in our YAML. We could just as successfully run bookdown::render_book(\"index.Rmd\"). If all goes according to plan, you will see a smattering of new folders and files. Your shiny new book can be found in docs/_main.pdf8. If things did not go according to plan, you will get an error and a request that you delete _main.Rmd before recompiling. _main.Rmd is a document that‚Äôs created in the process, but gets deleted when the final output has successfully compiled. It can often give you hints as to what went wrong (the lines where it got tripped up will be echoed in the error message). As instructed, you must delete it before you try to render again. Other things to know This is the ‚ÄúMerge-and-Knit‚Äù approach. See Yihui‚Äôs explanation of other rendering approaches here. Yihui also recommends not rendering the full PDF that often, as it can be very time consuming when the output is large, and you run the risk of getting caught up with typesetting queries that are best left to the end. There is a way to preview individual chapters that Yihui has included in bookdown, but I will also discuss my own preview methods later on. If you choose to use the LaTeX nomenclature package to handle abbreviations, you need to do some additional work to get the abbreviations to show up the first time. I recommend scrolling to this section in Lucy‚Äôs blog post Chapter headers (Chapter 1, Chapter 2, etc) are inserted when you use a first level header, e.g. # Header 1. Subsections within a chapter are assigned based on the subheaders you use (e.g., ## Header 2, ### Header 3‚Ä¶) YAML (rhymes with camel): The frontmatter/metadata that tells R Markdown how to generate your document. Indentation and spacing are very important. Stands for ‚ÄúYAML Ain‚Äôt Markup Language‚Äù or, less meta, ‚ÄúYet Another Multicolumn Layout.‚Äù‚Ü© The thesisdown package readme has a nice list of other templates that people have adapted for their universities if you‚Äôd like to compare other .tex input files.‚Ü© Whether you output to ‚Äúdocs‚Äù or somewhere else, and what the ‚Äúmain‚Äù PDF wil be called can all be changed in _bookdown.yaml document. If you don‚Äôt include this document, the default folder is _book and the default name is _main.‚Ü© "],
["intermediary-stages.html", "Chapter 6 Intermediary stages", " Chapter 6 Intermediary stages I like to do a full rendering of my PDF anytime I make major changes, just to make sure everything still works so as to avoid major errors along the way. In the interim, I have a couple of different methods for viewing my work. These are some suggestions: Bookmark an .html version of your most recent version for quick and easy viewing: Every day, I compile a gitbook version of my dissertation. This outputs an HTML file that can be viewed in a web browser. I‚Äôve saved this page to my Chrome bookmarks so I can easily glance at the most recent version whenever I want. Keep a bookdown project of notes that can also be bookmarked and easily viewed: I also have another bookdown project that I update regularly called my dissertation ‚Äúroadmap‚Äù, and which is also bookmarked for easy access. I use this ‚Äúbook‚Äù as a collection of notes to myself (mainly changes to my methodology, issues I‚Äôve run into with compiling, etc‚Ä¶). I also used it to cut my teeth on while getting used to bookdown, before actually compiling the bones of my dissertation for the first time. Knit individual chapters in isolation: You can knit individual .Rmd files to see how images show up, how the text looks, etc. I like to knit to HTML on a very regular basis because it‚Äôs a) fast and b) shows up immediately in my Viewer pane in RStudio. I also will occasionally knit individual chapters as Word documents to see how they will show up when I send them to my supervisor for edits (see below), and to keep track of things that aren‚Äôt playing nice with Word. Use child documents to knit partial previews of the dissertation to send to your supervisor/committee: My supervisor does not need to see my entire dissertation document every time I add a section. It is much kinder and realistic to send individual chapters or sections to him. Furthermore, he likes to receive things in .docx format so he can used tracked changes to add suggestions. After much hemming and hawing, I have settled on a workflow for this that I am happy with, though it is by no means the best option for everyone. See the next Section 7. "],
["previews.html", "Chapter 7 Previews and collaborations", " Chapter 7 Previews and collaborations One of the reasons I have fallen so completely in love with R Markdown is it lets me putter away in my ideal workflow (do stuff in R, integrate directly in document, have full control over style parameters), AND honour my supervisor‚Äôs desire to receive .docx documents. While my final output will be rendered as a PDF, and my interim document will be rendered as HTML, the drafts that get sent to my supervisor must be in Word. As previously mentioned, bookdown specifically has a function to render previews. You can read more about that here. This option is helpful for seeing exactly what that chapter will look like in the final version. I strayed away from this option because sometimes I found myself wanting to send my supervisor multiple parts of my dissertation at once (e.g., part of the methods, part of the results), but I don‚Äôt care if he sees the front matter of the dissertation skeleton. To do this, I have the following protocol in place: Sub-directory called previews that contains one file: render_preview.Rmd render_preview contains: minimal YAML required to output a legible .docx file minimal setup chunk identical to what I have in index.Rmd chunks that call child documents; a way to input specific .Rmd files as-is into a main .Rmd ‚Äúparent‚Äù document (in this case, render_previews.Rmd is the parent) render_preview.Rmd Sending a draft preview When I‚Äôm ready to send a partial draft to my supervisor, I input the relevant child documents and knit render_previews.Rmd. I then name it something useful and send it to him. He may mark it up and send it back to me with tracked changes I then incorporate these tracked changes by hand into my R Markdown files. Note: this is a highly controversial topic! We have currently hit a happy medium where I am okay doing this (it gives me the opportunity to more carefully review the changes I think), and he has allowed me to send drafts without tracked changes back. NOT ALL COLLABORATORS WILL BE THIS FLEXIBLE. Some want to see the tracked changes sent back to them too. This gets tricky with R Markdown, and has been the centre of several debates. Some semi-solutions you may wish to explore that I have retweeted exactly for this purpose: Well this is potentially extremely exciting. Two way word &lt;-&gt; rmd street, including tracked changes integration. Will be watching this one üëÄ https://t.co/7hcqolbBFQ ‚Äî Thea Knowles ((???)) December 2, 2018 TIL There is a way to compare diffs between 2 .docx filesImplications for Rmd workflows with collaborators/supervisors using Word: Use the revised .docx version to guide changes in your .Rmd, then compare new output with the original to dbl checküëç https://t.co/A2EtEpFxbm pic.twitter.com/dnWDjCXLxn ‚Äî Thea Knowles ((???)) February 15, 2019 "],
["nitty-gritty-stuff.html", "Chapter 8 Nitty gritty stuff 8.1 Reference management 8.2 Notes to self within text 8.3 Snippets! 8.4 Predefined functions 8.5 Autogenerating table/figure numbers 8.6 Version control", " Chapter 8 Nitty gritty stuff ‚ö†Ô∏è Not everything here is a fully formed thought! 8.1 Reference management There are lots of great tools for reference management. Some of the most popular ones amongst my colleagues are: Mendeley Zotero I really like: JabRef. It is a lot less fancy than Mendeley and Zotero though. BibDesk (for Mac users) is very similar, though after a brief trial stint I found I prefer the layout of JabRef. You could also edit your .bib file by hand in a regular text editor if you‚Äôd like, so long as you stick to the conventions. Ultimately, it comes down to what works for you. Importantly, for use with R Markdown, what you need is a .bib file. You specify the path to this file in your main YAML (in index.Rmd). My process: When I come across a new paper, I immediately add its info to my .bib file. I also immediately add important keywords or notes to the bib entry. I get the BibTeX info using Google Scholar‚Äôs citation tools (specifically, the GoogleScholar Chrome plugin) I also immediately make any quick edits I may need to the entry fields (e.g., words that need to be capitalized must be encased in {}; sometimes Google Scholar‚Äôs single quotes have given me grief, so I usually replace these‚Ä¶ etc) I have a category called ‚Äúread me!‚Äù that I dump all my new papers into to remind myself what I added recently and why. Citation keys When you cite references from your .bib file, you need to reference the citation key. In the following standard bib entry example, the citation key is the first argument (kalf2012). I try to be super consistent with my naming conventions (e.g., always in the form of firstAuthorYear, plus an additional keyword when necessary). This makes it easier to call to mind references from memory. To cite a source, preface it with @, and use square brackets [] to enclose it in parentheses, like this [@kalf2012]. Multiple sources can be separated by commas. @article{kalf2012, title={Prevalence of oropharyngeal dysphagia in {P}arkinson‚Äôs disease: a meta-analysis}, author={Kalf, JG and De Swart, BJM and Bloem, BR and Munneke, Marten}, journal={Parkinsonism \\&amp; related disorders}, volume={18}, number={4}, pages={311--315}, year={2012}, publisher={Elsevier} } You can specify how you would like your bibliography and citations to be formatted by pointing to .csl style files or via the biblio-style argument as we have done in our YAML in this tutorial. Citr A very useful RStudio Add-in that allows you to cite your sources from a drop-down menu is citr. A list of references will be autogenerated at the end of your document in rmarkdown/bookdown. Citing R packages The bookdown manual details how to use the write_bib() helper function to generate BibTeX entries automatically for R Packages. More resources bookdown chapter on citations Zotero hacks for rmarkdown 8.2 Notes to self within text I pepper my text with ‚ÄúXX‚Äù and ‚ÄúTODO‚Äù markers to flag all areas I know I will need to come back and pay special attention to. This makes it easy to search each chapter. I also make them red so I can more easily see them in my preview versions (but so far have only figured out how to do this for HTML syntax‚Ä¶) 8.3 Snippets! I. üíï. SNIPPETS. You can predefine snippets, or text shortcuts, to insert common strings of text. I have snippets for everything from inserting warning emoji to myself (‚ö†Ô∏è) to inserting text + R code for reporting regression model results. To customize your snippets from RStudio, go to : Tools/Global Options... and then Code and Edit Snippets: Here are some of my snippets. I organize them into themes to make it easier to edit and add to them: 8.3.1 More resources Mara Averick‚Äôs guide RStudio Support guide My tweet rant on getting snippets to work for inline R code 8.4 Predefined functions If you find yourself writing the same code over and over, consider turning it into a function. 8.4.1 Where to keep your functions Option 1. Store them in an .R file (e.g., my_functions.R) and source this file as needed. Option 2. Create an R package (not as hard as it sounds!) and load it along with your other packages. TJ Mahr has a nice example of a ‚Äúmisc‚Äù package for this purpose. academicWriteR is also a great resource for the kinds of functions you may want to use. 8.5 Autogenerating table/figure numbers As long as you follow the instructions in this tutorial, your tables (via kable) will be autonumbered and will show up in your List of Tables defined in doc_preface.tex. Your figures (via the caption option in the R chunk) will also be autonumbered and will show up in your List of Figures. Caveat: I have tried to figure out happier ways to make tables in R Markdown work for me across Word/PDF outputs and I have not found one single solution I‚Äôm 100% happy with. Some rambling thoughts (see also Section 10): kable is necessary to be automatically added to your List of Tables, but it has fewer output options for .docx. flextable is a great package if you are only outputting to Word or HTML, but not to PDF kableExtra has an function to_image() that will make nicely formatted HTML/PDF tables show up as an image across different outputs, but it does not play nice with autogenerated numbering captioner is a great solution for dealing with autogeneration of numbers and figures without dealing with kable, but doesn‚Äôt show up in the List of Tables Some people have suggested using if-statements to toggle whether you‚Äôre knitting to HTML or PDF, but I have found this too cumbersome for my long-term happiness. 8.6 Version control Git is Great. I personally found the language surrounding Git and GitHub to be a steep learning curve, but Jenny Bryan recently published Happy Git with R that makes the whole process a lot more accessible. I also use GitHub Desktop because I was becoming frustrated at my continued forgetting of command line syntax for using git and not lighting everything on fire. Other resources Jenny Bryan‚Äôs Happy Git with R Pauline Barmby curated some resources for her R-Ladies #LdnOnt presentation on Git and GitHub: Tutorial 1: HubSpot Intro Tutorial 2: Software Carpentry Intro Tutorial 3: Atlassian Tutorial GitHub Guide "],
["exercises.html", "Chapter 9 Exercises 9.1 Exercise 1. Getting started with RMarkdown 9.2 Exercise 2. What‚Äôs in a chapter? Lite version 9.3 Exercise 3. What‚Äôs in a chapter? Heavy-duty version 9.4 Exercise 4. Render the book! 9.5 Exercise 5. Edit the front matter", " Chapter 9 Exercises 9.1 Exercise 1. Getting started with RMarkdown Make an R Project R Projects make project management really simple. For every new project you embark on, creating a new .RProj file. Open that .RProj file whenver you‚Äôre ready to work on that project, and it will: Give you easy access to the directory structure (no need to define a working directory) Restore your last RStudio session from that project (no need to reopen files) Give you access to your R history from your last session NB: these preferences can all be tweaked Follow the prompts to create a project in a new directory for this workshop Make a new .Rmd file These are the components of your RMarkdown file: We won‚Äôt go into this in too much detail Knit your document Options to try Make a list Add some first and second level headers Add some bold text and italic text Add some R code in an R chunk Try knitting it as a‚Ä¶. Word document Html document PDF document Back to Section 2 9.2 Exercise 2. What‚Äôs in a chapter? Lite version Open 01_Intro.Rmd and do the following: Write some text Insert an R chunk that contains some simple R code Knit to HTML E.g., x = 3 x^2 ## [1] 9 Back to Section 4 9.3 Exercise 3. What‚Äôs in a chapter? Heavy-duty version Open 03a_Results.Rmd and find examples of: sourcing a helper file (helper.R) citing references generating images and tables from the imported data cross-referencing those figures and tables using inline R code to refer to values from the data (like p-values, etc) so there‚Äôs never a need to copy/paste Open ../scripts/helper.R to see what it contains. Open 03b_Results.Rmd and do any of the following: source helper.R write some text cite another source from references.bib make a figure or a table Knit the document as an HTML file Back to Section 4 9.4 Exercise 4. Render the book! Render your book by running bookdown::render_book(&quot;index.Rmd&quot;, &quot;bookdown::pdf_book&quot;) At this point you can also see what the other formats look like: bookdown::render_book(&quot;index.Rmd&quot;, &quot;bookdown::word_document2&quot;) bookdown::render_book(&quot;index.Rmd&quot;, &quot;bookdown::gitbook&quot;) How are the different outputs called? How do they differ? Where do they live? Errors If you were able to compile without difficulties, try to create an error to see what it will look like when you try to compile. Some examples of errors I have easily and repeatedly encountered throughout this process are: having two R chunks with the same name (e.g., I often have a chunk named setup at the beginnings of some of my .Rmd documents. I have taken to calling these setup-intro, setup-method etc. when I need to have them but don‚Äôt want them to cause errors.) running into an error somewhere in the R script (did I try to call a variable that didn‚Äôt exist? Forget to load a package? How many ways are there to err in R, oh let me count the ways‚Ä¶) Solving errors is really a case-by-case quest. I try to first see what hints are in the error message (is it an .Rmd issue? A Latex issue? An R issue?) and usually resort to googling the error9. More resources: - Getting started with bookdown 9.5 Exercise 5. Edit the front matter Open parameters/doc_preface.tex Rewrite the abstract or acknowledgements section. Open parameters/preamble.tex Find the fields where I‚Äôve specified my name, and edit them to include your own Recompile the dissertation. Joy be it that ‚ÄúGoogling the error message‚Äù is now an R package.‚Ü© "],
["limitations.html", "Chapter 10 Closing thoughts", " Chapter 10 Closing thoughts There are a lot of things I‚Äôm still learning, and a lot of other ways to do what we‚Äôve done together here. Here are some final thoughts related to things I wish I still had a better grasp on. Table formatting Table formatting is ugly with kable(). There are alternatives to kable that are specifically designed for .docx output. These are lovely alternatives to use if you are only outputting to Word (or HTML), but I have repeatedly run into problems with these other options playing nice when alternating between .pdf and .docx outputs. Table formatting packages for .docx outputs: flextable captioner kableExtra::as_image() Parameter files: A neater, nicer way? In its current format, all your writing is in R Markdown except when it comes to your pre-body text, which have to be done in the doc_preface.tex. This is not a huge concern, though eventually down the line it would be nice to somehow incorporate this text into R Markdown documents as well for total continuity. Alas, today is not that day. Additionally, providing more than style specifications to Word documents is a tricky business, and one I do not have a firm grasp on. At the moment, the .docx template provided tells R Markdown/bookdown how to style the document, but does not include the abstract. My rationalization for not worrying about this is that the .docx versions, for me, are intermediary; they are not the final product, and so fussing about the fine grained details is not a good use of time. However, it may be the case that someone down the line would prefer to use a .docx output every step of the way, right up until the final submission. In this case, more tweaking would need to be done. I have many more complaints about outputting to word (see Table gripes up above), but I think these limitations are not related to the fact that solutions don‚Äôt exist, but that I haven‚Äôt figured them out yet and have decided to stop worrying. Collaboration: still a hurdle As mentioned in Section 7, collaborating with other people who rely on a very different system can still be a challenge. That being said, I think finding a happy medium, which at this point may still require some minor sacrifices from each party, is fully worth it. I know this is a hot topic for researchers everywhere, and have confidence that options will continue to expand as people keep contributing to package development. That‚Äôs one of the many lovely things about the #rstats open source community! "],
["resources.html", "Chapter 11 Other great resources", " Chapter 11 Other great resources As mentioned, this is but one way of doing things, and I have scraped it together based on the incredibly useful resources others before me have made available. Here are some of the ones I have found most helpful. Lucy‚Äôs blog post Angela Li‚Äôs thread Rosanna van Hespen‚Äôs blog series Chester Ismay‚Äôs thesisdown package and examples (see other people‚Äôs adaptations within, as well!) The hope is to incorporate our Western template eventually! Ed Berry‚Äôs blog post Tyson Barret‚Äôs blog post TJ Mahr‚Äôs dissertation materials RStudio community post on thesis writing knitr examples academicWriteR: an R package of helper functions for writing manuscripts "]
]
